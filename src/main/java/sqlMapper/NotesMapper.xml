<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.NotesMapper" >
  <resultMap id="BaseResultMap" type="po.Notes" >
    <id column="notes_id" property="notesId" jdbcType="VARCHAR" />
    <result column="notes_title" property="notesTitle" jdbcType="VARCHAR" />
    <result column="notes_content" property="notesContent" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="special" property="special" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="effective" property="effective" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    notes_id, notes_title, notes_content, user_id, user_name, special, create_time, effective
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="po.NotesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from notes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from notes
    where notes_id = #{notesId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from notes
    where notes_id = #{notesId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="po.NotesExample" >
    delete from notes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="po.Notes" >
    insert into notes (notes_id, notes_title, notes_content, 
      user_id, user_name, special, 
      create_time, effective)
    values (#{notesId,jdbcType=VARCHAR}, #{notesTitle,jdbcType=VARCHAR}, #{notesContent,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{special,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=DATE}, #{effective,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="po.Notes" >
    insert into notes
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="notesId != null" >
        notes_id,
      </if>
      <if test="notesTitle != null" >
        notes_title,
      </if>
      <if test="notesContent != null" >
        notes_content,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="special != null" >
        special,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="effective != null" >
        effective,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="notesId != null" >
        #{notesId,jdbcType=VARCHAR},
      </if>
      <if test="notesTitle != null" >
        #{notesTitle,jdbcType=VARCHAR},
      </if>
      <if test="notesContent != null" >
        #{notesContent,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="special != null" >
        #{special,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="effective != null" >
        #{effective,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="po.NotesExample" resultType="java.lang.Integer" >
    select count(*) from notes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update notes
    <set >
      <if test="record.notesId != null" >
        notes_id = #{record.notesId,jdbcType=VARCHAR},
      </if>
      <if test="record.notesTitle != null" >
        notes_title = #{record.notesTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.notesContent != null" >
        notes_content = #{record.notesContent,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.special != null" >
        special = #{record.special,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.effective != null" >
        effective = #{record.effective,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update notes
    set notes_id = #{record.notesId,jdbcType=VARCHAR},
      notes_title = #{record.notesTitle,jdbcType=VARCHAR},
      notes_content = #{record.notesContent,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      special = #{record.special,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=DATE},
      effective = #{record.effective,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="po.Notes" >
    update notes
    <set >
      <if test="notesTitle != null" >
        notes_title = #{notesTitle,jdbcType=VARCHAR},
      </if>
      <if test="notesContent != null" >
        notes_content = #{notesContent,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="special != null" >
        special = #{special,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="effective != null" >
        effective = #{effective,jdbcType=INTEGER},
      </if>
    </set>
    where notes_id = #{notesId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="po.Notes" >
    update notes
    set notes_title = #{notesTitle,jdbcType=VARCHAR},
      notes_content = #{notesContent,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      special = #{special,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      effective = #{effective,jdbcType=INTEGER}
    where notes_id = #{notesId,jdbcType=VARCHAR}
  </update>
</mapper>